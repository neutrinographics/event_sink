// Mocks generated by Mockito 5.3.2 from annotations
// in event_sync/test/feature/data/repositories/event_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:event_sync/src/core/data/id_generator.dart' as _i7;
import 'package:event_sync/src/core/time/time_info.dart' as _i8;
import 'package:event_sync/src/feature/data/local/data_sources/event_local_data_source.dart'
    as _i5;
import 'package:event_sync/src/feature/data/local/models/event_model.dart'
    as _i6;
import 'package:event_sync/src/feature/data/remote/data_sources/event_remote_data_source.dart'
    as _i3;
import 'package:event_sync/src/feature/data/remote/models/remote_event_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRemoteEventModel_0 extends _i1.SmartFake
    implements _i2.RemoteEventModel {
  _FakeRemoteEventModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_1 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [EventRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventRemoteDataSource extends _i1.Mock
    implements _i3.EventRemoteDataSource {
  MockEventRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.RemoteEventModel>> getEvents({
    required Uri? host,
    required String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEvents,
          [],
          {
            #host: host,
            #token: token,
          },
        ),
        returnValue: _i4.Future<List<_i2.RemoteEventModel>>.value(
            <_i2.RemoteEventModel>[]),
      ) as _i4.Future<List<_i2.RemoteEventModel>>);
  @override
  _i4.Future<_i2.RemoteEventModel> createEvent(
    _i2.RemoteEventModel? event, {
    required Uri? host,
    required String? token,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createEvent,
          [event],
          {
            #host: host,
            #token: token,
          },
        ),
        returnValue:
            _i4.Future<_i2.RemoteEventModel>.value(_FakeRemoteEventModel_0(
          this,
          Invocation.method(
            #createEvent,
            [event],
            {
              #host: host,
              #token: token,
            },
          ),
        )),
      ) as _i4.Future<_i2.RemoteEventModel>);
}

/// A class which mocks [EventLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventLocalDataSource extends _i1.Mock
    implements _i5.EventLocalDataSource {
  MockEventLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> cacheEvent(_i6.EventModel? model) => (super.noSuchMethod(
        Invocation.method(
          #cacheEvent,
          [model],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<_i6.EventModel>> getAllEvents() => (super.noSuchMethod(
        Invocation.method(
          #getAllEvents,
          [],
        ),
        returnValue: _i4.Future<List<_i6.EventModel>>.value(<_i6.EventModel>[]),
      ) as _i4.Future<List<_i6.EventModel>>);
  @override
  _i4.Future<void> deleteEvent(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #deleteEvent,
          [eventId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [IdGenerator].
///
/// See the documentation for Mockito's code generation for more information.
class MockIdGenerator extends _i1.Mock implements _i7.IdGenerator {
  MockIdGenerator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String generateId() => (super.noSuchMethod(
        Invocation.method(
          #generateId,
          [],
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [TimeInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimeInfo extends _i1.Mock implements _i8.TimeInfo {
  MockTimeInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  DateTime now() => (super.noSuchMethod(
        Invocation.method(
          #now,
          [],
        ),
        returnValue: _FakeDateTime_1(
          this,
          Invocation.method(
            #now,
            [],
          ),
        ),
      ) as DateTime);
}
