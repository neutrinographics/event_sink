// Mocks generated by Mockito 5.3.2 from annotations
// in event_sink/test/feature/data/repositories/config_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:event_sink/src/core/domain/config_options.dart' as _i5;
import 'package:event_sink/src/feature/data/local/data_sources/config_local_data_source.dart'
    as _i3;
import 'package:event_sink/src/feature/data/local/models/config_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeConfigModel_0 extends _i1.SmartFake implements _i2.ConfigModel {
  _FakeConfigModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ConfigLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigLocalDataSource extends _i1.Mock
    implements _i3.ConfigLocalDataSource {
  MockConfigLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> write(_i2.ConfigModel? model) => (super.noSuchMethod(
        Invocation.method(
          #write,
          [model],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i2.ConfigModel> read(_i5.ConfigOption? option) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [option],
        ),
        returnValue: _i4.Future<_i2.ConfigModel>.value(_FakeConfigModel_0(
          this,
          Invocation.method(
            #read,
            [option],
          ),
        )),
      ) as _i4.Future<_i2.ConfigModel>);
  @override
  _i4.Future<void> delete(_i5.ConfigOption? option) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [option],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
